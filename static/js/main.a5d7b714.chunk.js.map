{"version":3,"sources":["comps/Title.js","firebase/config.js","hooks/useFileStorage.js","comps/progressbar.js","comps/Upload.js","hooks/useFireStore.js","comps/Image-grid.js","comps/modal.js","App.js","index.js"],"names":["Title","className","firebase","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","projectFirestore","projectStorage","timeStamp","FieldValue","serverTimestamp","console","log","useFileStorage","file","useState","url","setUrl","setError","progress","setProgress","useEffect","storageRef","ref","name","collectionRef","collection","put","on","snap","percentage","bytesTransferred","totalBytes","err","a","getDownloadURL","createdAt","add","ProgressBar","setFile","useStorage","div","initial","width","animate","Upload","setFileName","error","allowedTypes","type","onChange","e","Selectedfile","target","files","includes","useFireStore","docs","setDocs","unsub","orderBy","onSnapshot","documents","forEach","doc","push","data","id","ImageGrid","setSelectedImage","map","layout","whileHover","opacity","s","onClick","img","alt","src","BackDropModal","selectedImg","classList","contains","y","App","selectedImage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a5d7b714.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Title = () => {\r\n  return (\r\n    <div className=\"title\">\r\n      <h1>FireGram</h1>\r\n      <h2>Your Pictures</h2>\r\n      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Title;","import * as firebase from 'firebase/app';\r\nimport 'firebase/storage';\r\nimport 'firebase/firestore';\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyC10ZBb0dI7Z_vlv7Wobcf1DaeakvGofUg\",\r\n  authDomain: \"firegram-01.firebaseapp.com\",\r\n  projectId: \"firegram-01\",\r\n  storageBucket: \"firegram-01.appspot.com\",\r\n  messagingSenderId: \"786310976073\",\r\n  appId: \"1:786310976073:web:8ce3107facd3f88f48a598\"\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst projectFirestore = firebase.firestore();\r\nconst projectStorage = firebase.storage();\r\nconst timeStamp = firebase.firestore.FieldValue.serverTimestamp;\r\nconsole.log('projectStorage', projectStorage)\r\nexport {projectStorage, projectFirestore, timeStamp};","import React, { useEffect, useState } from \"react\";\r\nimport { projectStorage, projectFirestore, timeStamp } from '../firebase/config';\r\nconst useFileStorage = (file) => {\r\n    const [url, setUrl] = useState(null);\r\n    const [error, setError] = useState(null);\r\n    const [progress, setProgress] = useState(0);\r\n\r\n    useEffect(() => {\r\n        console.log('useEffectCalled');\r\n        const storageRef = projectStorage.ref(file.name);\r\n        const collectionRef = projectFirestore.collection('images');\r\n\r\n        storageRef.put(file).on('state_changed', (snap) => {\r\n            let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\r\n            setProgress(percentage);\r\n          }, (err) => {\r\n            setError(err);\r\n          }, async () => {\r\n            const url = await storageRef.getDownloadURL();\r\n            const createdAt = timeStamp();\r\n            await collectionRef.add({ url, createdAt });\r\n            setUrl(url);\r\n          });\r\n    },[file])\r\n    //const storageRef = projectstorage.ref(file.name);\r\n\r\n    return {url, progress};\r\n}\r\nexport default useFileStorage;\r\n","import React from \"react\";\r\nimport useStorage from '../hooks/useFileStorage'\r\nimport {motion} from 'framer-motion'\r\nconst ProgressBar = ({file, setFile}) => {\r\n    const {progress , url} = useStorage(file, setFile);\r\n    return (\r\n        <motion.div className=\"progress-bar\" initial={{ width: 0 }}\r\n        animate={{ width: progress + '%' }}></motion.div>\r\n    )\r\n}\r\n\r\nexport default ProgressBar;","import React, { useState } from \"react\";\r\nimport ProgressBar from \"./progressbar\";\r\nconst Upload = () => {\r\n    const [file, setFileName] = useState(null);\r\n    const [error, setError] = useState(null);\r\n    const allowedTypes = ['image/png', 'image/jpg', 'image/jpeg'];\r\n    const OnfileUpload = (e) => {\r\n        const Selectedfile = e.target.files[0];\r\n        if(allowedTypes.includes(Selectedfile.type)) {\r\n            setFileName(Selectedfile);\r\n            setError(null);\r\n        }\r\n        else {\r\n            setFileName(null);\r\n            setError('File type is not valid')\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <label>\r\n            <input type=\"file\" onChange={OnfileUpload}></input>\r\n            <span>+</span>\r\n            </label>\r\n            \r\n            <div className=\"output\">\r\n              {file &&  <div className=\"file-name\">{file.name}</div>}\r\n              {error && <div className=\"error\">{error}</div>}\r\n              {file && <ProgressBar file={file} setFile= {setFileName}></ProgressBar>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Upload;","import React, { useEffect, useState } from \"react\";\r\n\r\nimport {projectFirestore} from '../firebase/config'\r\n\r\nconst useFireStore = (collection) => {\r\n    const [docs, setDocs] = useState(null);\r\n    useEffect(() => {\r\n        const unsub = projectFirestore.collection(collection)\r\n        .orderBy('createdAt','desc')\r\n        .onSnapshot(snap => {\r\n            let documents = [];\r\n            snap.forEach(doc => {\r\n                documents.push({...doc.data(), id: doc.id})\r\n            })\r\n            setDocs(documents)\r\n        });\r\n        return () => unsub();\r\n    },[collection])\r\n    return {docs};   \r\n}\r\n\r\nexport default useFireStore;","import { motion } from \"framer-motion\";\r\nimport React from \"react\";\r\nimport useFireStore from \"../hooks/useFireStore\";\r\n\r\nconst ImageGrid = ({setSelectedImage}) => {\r\n    const {docs} = useFireStore('images');\r\n    return(\r\n        <motion.div className=\"img-grid\">\r\n        {docs && docs.map((data) => (\r\n            <motion.div \r\n            layout \r\n            className=\"imag-wrap\" \r\n            whileHover={{ opacity: 1 }}s\r\n            onClick={() => setSelectedImage(data.url)} >\r\n                <motion.img alt=\"image\" src={data.url}></motion.img>\r\n            </motion.div>\r\n        ))}\r\n        \r\n        </motion.div>\r\n    )\r\n}\r\nexport default ImageGrid;","import { motion } from \"framer-motion\";\r\nimport React from \"react\";\r\n\r\nconst BackDropModal = ({setSelectedImage, selectedImg}) => {\r\n    const handleClick = (e) => {\r\n        if(e.target.classList.contains('backdrop')) {\r\n            setSelectedImage(null)\r\n        }\r\n    }\r\n    return (\r\n    <motion.div className=\"backdrop\" onClick={handleClick}\r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n      >\r\n        <motion.img src={selectedImg} alt=\"enlarged pic\" \r\n          initial={{ y: \"-100vh\" }}\r\n          animate={{ y: 0 }}\r\n        />\r\n      </motion.div>\r\n    )\r\n}\r\n\r\nexport default BackDropModal;","import React, { useState } from 'react';\r\nimport Title from './comps/Title';\r\nimport Upload from './comps/Upload';\r\nimport ImageGrid from './comps/Image-grid';\r\nimport BackDropModal from './comps/modal';\r\n\r\nfunction App() {\r\n  const [selectedImage, setSelectedImage] = useState(null)\r\n  return (\r\n    <div className=\"App\">\r\n      <form>\r\n        <Title/>\r\n        <Upload />\r\n        <ImageGrid setSelectedImage={setSelectedImage}></ImageGrid>\r\n        { selectedImage && <BackDropModal setSelectedImage={setSelectedImage} selectedImg={selectedImage}></BackDropModal>}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}